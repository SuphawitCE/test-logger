const joi = require('joi');
const { validStores, validLanguages } = require('../utils');

const langSchema = joi.object({
  en: joi.string().required(),
  th: joi.string().allow(null),
  id: joi.string().allow(null),
  zh: joi.string().allow(null)
});

const langBasedNullableSchema = joi
  .object()
  .pattern(joi.valid(...validLanguages), joi.string().allow(null));

const pricesSchema = joi.object().keys({
  thb: joi.string().required(),
  usd: joi.string().allow(null),
  myr: joi.string().allow(null),
  idr: joi.string().allow(null),
  hkd: joi.string().allow(null),
  aud: joi.string().allow(null),
  sgd: joi.string().allow(null),
  php: joi.string().allow(null)
});

const activeSchema = joi
  .object()
  .pattern(joi.valid(...validStores), joi.bool());

const careInstructionsFieldSchema = joi.object().keys({
  bleaching: joi.string().allow(null),
  dry_clean: joi.string().allow(null),
  drying: joi.string().allow(null),
  iron: joi.string().allow(null),
  washing: joi.string().allow(null)
});

const colorSwatchSchema = joi.object({
  pattern: joi.string().allow(null),
  file_name: joi.string().allow(null)
});

const ingredientsFieldSchema = joi.array().items(
  joi.object().keys({
    name: joi.string(),
    value: joi.string().allow(null)
  })
);

const materialsFieldSchema = joi.object().keys({
  fabrics: joi.array().items(
    joi.object({
      name: joi.string(),
      percent: joi.number().allow(null)
    })
  ),
  lining: joi.string().allow(null),
  silhouette: joi.string().allow(null),
  stretch: joi.string().allow(null),
  thickness: joi.string().allow(null),
  transparency: joi.string().allow(null),
  compression: joi.string().allow(null)
});

const measurementImageSchema = joi.object({
  alias: joi.string().allow(null),
  file_name: joi.string().allow(null),
  group_name: joi.string().allow(null)
});

const measurementsSchema = joi.object().pattern(
  /\w/,
  joi.array().items(
    joi.object().keys({
      name: langBasedNullableSchema,
      value_cm: joi.string().allow(null),
      value_in: joi.string().allow(null)
    })
  )
);

const variantsFieldSchema = joi.object().keys({
  option: joi.string().required(),
  barcode: joi.string().required(),
  prices: pricesSchema
});

const imageObjectSchema = joi.object().keys({
  src: joi.string().required(),
  position: joi.number().required()
});

const imagesFieldSchema = joi.object().keys({
  cover: imageObjectSchema.allow(null),
  hover: imageObjectSchema.allow(null),
  flatlay: imageObjectSchema.allow(null),
  smartly: imageObjectSchema.allow(null),
  marketplace: joi.array().items(imageObjectSchema).min(0).allow(null),
  closeup: imageObjectSchema.allow(null),
  additional: joi.array().items(imageObjectSchema).min(0)
});

const Product = joi.object({
  origin_id: joi.string().required(),
  vendor: joi.string().required(),
  title: langSchema.required(),
  description: langSchema.required(),
  release_date: joi
    .object()
    .pattern(joi.valid(...validStores), joi.date().iso().allow(null))
    .required(),
  active: activeSchema.required(),
  base_color: langSchema.required(),
  product_line: joi.string().required(),
  sub_product_line: joi.string().required(),
  category_1: langSchema.required(),
  variants: joi.object().pattern(/\w/, variantsFieldSchema).required(),
  tags: joi
    .object()
    .pattern(joi.valid(...validLanguages), joi.array().items(joi.string()))
    .required(),
  category_2: langBasedNullableSchema.allow(null),
  category_3: langBasedNullableSchema.allow(null),
  category_4: langBasedNullableSchema.allow(null),
  color_swatches: colorSwatchSchema.allow(null),
  fit_type: langBasedNullableSchema.allow(null),
  care_instructions: joi
    .object()
    .pattern(joi.valid(...validLanguages), careInstructionsFieldSchema)
    .allow(null),
  ingredients: joi
    .object()
    .pattern(joi.valid(...validLanguages), ingredientsFieldSchema.allow(null))
    .allow(null),
  materials: joi
    .object()
    .pattern(joi.valid(...validLanguages), materialsFieldSchema)
    .allow(null),
  measurement_image: measurementImageSchema.allow(null),
  measurements: measurementsSchema.allow(null),
  waist_position: langBasedNullableSchema.allow(null),
  images: joi
    .object()
    .pattern(joi.valid(...validStores), imagesFieldSchema)
    .allow(null)
});

// For product stream schema
const metadataSchema = joi.object().keys({
  shopifyProductId: joi.number(),
  isScheduleDateSynced: joi.boolean()
});

const ProductStream = Product.keys({
  PK: joi.string().required(),
  SK: joi.string().required(),
  metadata: joi
    .object()
    .pattern(joi.valid(...validStores), metadataSchema)
    .allow(null),
  origin_id: joi.string().allow(null),
  createdAt: joi.string(),
  updatedAt: joi.string()
});

module.exports = {
  Product,
  language: Product.$_reach(['title']),
  releaseDate: Product.$_reach(['release_date']),
  image: Product.$_reach(['images']),
  variant: Product.$_reach(['variants']),
  tag: Product.$_reach(['tags']),
  active: Product.$_reach(['active']),
  langBasedNullableSchema: Product.$_reach(['category_2']),
  colorSwatch: Product.$_reach(['color_swatches']),
  careInstruction: Product.$_reach(['care_instructions']),
  ingredient: Product.$_reach(['ingredients']),
  material: Product.$_reach(['materials']),
  measurementImage: Product.$_reach(['measurement_image']),
  measurement: Product.$_reach(['measurements']),
  ProductStream
};
