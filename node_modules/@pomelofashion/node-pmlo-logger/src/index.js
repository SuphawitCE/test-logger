const pino = require('pino');
const envalid = require('envalid');

const { str } = envalid;

const env = envalid.cleanEnv(process.env, {
  LOG_LEVEL: str({ default: 'warn' })
});

const defaultRedactKeys = [
  'email',
  '*.email',
  'username',
  '*.username',
  'password',
  '*.password',
  'token',
  '*.token',
  'key',
  '*.key',
  'accessToken',
  '*.accessToken',
  '*.authorization',
  'options.headers.authorization',
  'options.headers["x-shopify-access-token"]',
  'given_name',
  '*.given_name',
  'family_name',
  '*.family_name',
  'phone_number',
  '*.phone_number',
  '["cognito:email_alias"]',
  '*["cognito:email_alias"]',
  '["cognito:phone_number_alias"]',
  '*["cognito:phone_number_alias"]',
  'idToken',
  '*.idToken',
  'refreshToken',
  '*.refreshToken',
  '["custom:firebase_uid"]',
  '*["custom:firebase_uid"]',
  'uid',
  '*.uid',
  'phoneNumber',
  '*.phoneNumber',
  'requestId',
  '*.requestId'
];

module.exports = {
  createLogger(opts = {}) {
    const { level, mixin, awsRequestId, redactKeys = [] } = opts;
    const logger = pino({
      level: level || env.LOG_LEVEL,
      mixin:
        mixin ||
        (() => ({
          awsRequestId
        })),
      serializers: {},
      redact: {
        paths: defaultRedactKeys.concat(redactKeys),
        censor: '**Redacted**'
      }
    });

    return logger;
  }
};
